ca65 V2.19 - Git 4f87c7c
Main file   : .\tunesmith.S
Current file: .\tunesmith.S

000000r 1               
000000r 1                ;*****************************
000000r 1                ;* KIM - The Tunesmith       *
000000r 1                ;*                           *
000000r 1                ;* Anthony T. Scarpelli      *
000000r 1                ;* RR1, Box 426              *
000000r 1                ;* N. Windham, ME 04062      *
000000r 1                ;*                           *
000000r 1                ;* in MICRO NUMBER 13        *
000000r 1                ;* (c) May 1979 by           *
000000r 1                ;* THE COMPUTERIST, INC.     *
000000r 1                ;*                           *
000000r 1                ;*****************************
000000r 1               
000000r 1               
000000r 1               pad 	 = 	 $1700 	;data register
000000r 1               padd 	 = 	 $1701 	;data direction register
000000r 1               timer	 = 	 $1704	;set Timer
000000r 1               ttimer	 = 	 $1707	;test Timer
000000r 1               stimer	 = 	 $170f	;start Timer
000000r 1               sad	 	 = 	 $1740	;System Data Register A
000000r 1               sadd	 = 	 $1741	;System Data direction A
000000r 1               sbd	 	 = 	 $1742	;System Data Register B
000000r 1               pbdd	 = 	 $1743	;System Data Direction B
000000r 1               keyin	 = 	 $1f40 	;Keypad input
000000r 1               getkey	 = 	 $1f6a	;get Keyboard input
000000r 1               tuntbl   =   $0060 	;Tune table
000000r 1               lnttbl   =   $00A8	;Length Table
000000r 1               
000000r 1               
000000r 1                        .org    $0000
000000  1               
000000  1  FB           note:    .byte   $fb	;G
000001  1  DF                    .byte   $df	;A
000002  1  C6                    .byte   $c6	;B
000003  1  BB                    .byte   $bb	;C
000004  1  A6                    .byte   $a6	;D
000005  1  93                    .byte   $93	;E
000006  1  8A                    .byte   $8a	;F
000007  1               
000007  1  7B           hinote:  .byte   $7b	;G
000008  1  6D                    .byte   $6d	;A
000009  1  61                    .byte   $61	;B
00000A  1  5B                    .byte   $5b	;C
00000B  1  51                    .byte   $51	;D
00000C  1  48                    .byte   $48	;E
00000D  1  43                    .byte   $43	;F
00000E  1               
00000E  1  ED           shpnot: .byte   $ed	;G_sharp, A_flat
00000F  1  D2                    .byte   $d2	;A_sharp, B_flat
000010  1  01                    .byte   $01	;and so on
000011  1  B0                    .byte   $b0
000012  1  9C                    .byte   $9c
000013  1  01                    .byte   $01
000014  1  83                    .byte   $83
000015  1               
000015  1  74           hishrp:  .byte   $74	;G_sharp, A_flat
000016  1  67                    .byte   $67	;on and on
000017  1  01                    .byte   $01
000018  1  56                    .byte   $56
000019  1  4C                    .byte   $4c
00001A  1  01                    .byte   $01
00001B  1  3F                    .byte   $3f
00001C  1               
00001C  1  00                    .byte   $00	;unused
00001D  1  00                    .byte   $00
00001E  1  00                    .byte   $00
00001F  1  00                    .byte   $00
000020  1               
000020  1  02           deltim:  .byte   $02	;Delay time
000021  1  00           timed:    .byte   $00
000022  1  00           timec:    .byte   $00
000023  1  00           savflg:  .byte   $00	;save flag
000024  1  00           tlenth:  .byte   $00	;temp length
000025  1  00           notptr:  .byte   $00	;note pointer
000026  1  00           keyptr:  .byte   $00	;key pointer
000027  1  00           tnote:   .byte   $00	;temp note
000028  1  00           hiflg:   .byte   $00	;hi flag
000029  1  00           shpflg:  .byte   $00	;sharp flag
00002A  1  00           notnum:  .byte   $00	;note number
00002B  1  00           prmnot:  .byte   $00	;permanent nore
00002C  1  00           fstflg:  .byte   $00	;first time flag
00002D  1  00           plenth:  .byte   $00	;perm length
00002E  1  00           tntnum:  .byte   $00	;temp. note number
00002F  1  00           nexnot:  .byte   $00	;next note
000030  1  00           delaya:  .byte   $00
000031  1  00           delayb:  .byte   $00
000032  1  00           pntptr:  .byte   $00	;perm. note pointer
000033  1  00           delayc:  .byte   $00
000034  1  00           ttbptr:  .byte   $00	;tunetable pointer
000035  1  00           ntbptr:  .byte   $00	;note table pointer
000036  1  00           notcnt:  .byte   $00	;note count
000037  1  00           dntcnt:  .byte   $00	;display note count
000038  1  00           temnot:  .byte   $00	;temp.note
000039  1  00           temlen:  .byte   $00	;temp.length
00003A  1  00           count:   .byte   $00
00003B  1  00           dfour:   .byte   $00
00003C  1  00           dthree:  .byte   $00
00003D  1  00           dtwo:    .byte   $00
00003E  1  00           done:    .byte   $00
00003F  1  00           lntptr:  .byte   $00	;length pointer
000040  1               
000040  1  01           keylnt:  .byte   $01	;whole note
000041  1  02                    .byte   $02	;half note
000042  1  04                    .byte   $04	;quater note
000043  1  08                    .byte   $08	;eighth note
000044  1  20           lnth:    .byte   $20	;length
000045  1  10                    .byte   $10
000046  1  08                    .byte   $08
000047  1  04                    .byte   $04
000048  1  86           lnshp:   .byte   $86	;length shape
000049  1  DB                    .byte   $db
00004A  1  E6                    .byte   $e6
00004B  1  FF                    .byte   $ff
00004C  1  BD           ntshp:   .byte   $bd	;letter shapes
00004D  1  F7                    .byte   $f7
00004E  1  FC                    .byte   $fc
00004F  1  B9                    .byte   $b9
000050  1  DE                    .byte   $de
000051  1  F9                    .byte   $f9
000052  1  F1                    .byte   $f1
000053  1  00           letnum:  .byte   $00 	;letter number
000054  1  0F                    .byte   $0f
000055  1  0D                    .byte   $0d
000056  1  0B                    .byte   $0b
000057  1  09                    .byte   $09
000058  1  08           letter:  .byte   $08	;letter shapes
000059  1  F9                    .byte   $f9
00005A  1  BE                    .byte   $be
00005B  1  F7                    .byte   $f7
00005C  1  ED                    .byte   $ed
00005D  1               
00005D  1                        .org    $0100
000100  1  A9 01        disnts:  lda     #$01		;reset display note count
000102  1  85 37                 sta     dntcnt
000104  1  A5 37        nxtnot:  lda     dntcnt		;test for end
000106  1  C5 36                 cmp     notcnt
000108  1  D0 03                 bne     begin
00010A  1  4C E1 01              jmp     doagnb
00010D  1               
00010D  1  A6 37        begin:   ldx     dntcnt		;store note
00010F  1  B5 60                 lda     tuntbl,x	;and length
000111  1  85 38                 sta     temnot
000113  1  B5 A8                 lda     lnttbl,x
000115  1  85 39                 sta     temlen
000117  1  A2 00                 ldx     #$00
000119  1  A5 38        rpt:     lda     temnot		;test for second
00011B  1  C9 01                 cmp     #$01		;group
00011D  1  F0 61                 beq     diszer
00011F  1  D5 00                 cmp     $00,x
000121  1  F0 04                 beq     sub
000123  1  E8                    inx
000124  1  4C 19 01              jmp     rpt
000127  1               
000127  1  38           sub:     sec				;test for first
000128  1  8A                    txa				;group
000129  1  E5 07                 sbc     hinote
00012B  1  B0 0D                 bcs     nxgrpa
00012D  1  B5 4C                 lda     ntshp,x	;store note shape
00012F  1  85 3D                 sta     dtwo
000131  1  A9 C0                 lda     #$c0
000133  1  85 3E                 sta     done
000135  1  85 3C                 sta     dthree
000137  1  4C 8A 01              jmp     dislen
00013A  1               
00013A  1  38           nxgrpa:  sec				;test for second
00013B  1  8A                    txa				;group
00013C  1  E9 0E                 sbc     #$0e
00013E  1  B0 13                 bcs     nxgrpb
000140  1  8A                    txa
000141  1  E9 06                 sbc     #$06		;store note shape
000143  1  AA                    tax
000144  1  B5 4C                 lda     ntshp,x
000146  1  85 3D                 sta     dtwo
000148  1  A9 F6                 lda     #$f6		;store hi shape
00014A  1  85 3E                 sta     done
00014C  1  A9 C0                 lda     #$c0
00014E  1  85 3C                 sta     dthree
000150  1  4C 8A 01              jmp     dislen
000153  1               
000153  1  38           nxgrpb:  sec				;test for third
000154  1  8A                    txa				;group
000155  1  E9 15                 sbc     #hishrp
000157  1  B0 13                 bcs     nxgrpc
000159  1  8A                    txa
00015A  1  E9 0D                 sbc     #$0d		;store note shape
00015C  1  AA                    tax
00015D  1  B5 4C                 lda     ntshp,x
00015F  1  85 3D                 sta     dtwo
000161  1  A9 ED                 lda     #$ed
000163  1  85 3C                 sta     dthree
000165  1  A9 C0                 lda     #$c0
000167  1  85 3E                 sta     done
000169  1  4C 8A 01              jmp     dislen
00016C  1               
00016C  1  38           nxgrpc:  sec				;store note shape
00016D  1  8A                    txa
00016E  1  E9 15                 sbc     #hishrp
000170  1  AA                    tax
000171  1  B5 4C                 lda     ntshp,x
000173  1  85 3D                 sta     dtwo
000175  1  A9 ED                 lda     #$ed		;store sharp note
000177  1  85 3C                 sta     dthree
000179  1  A9 F6                 lda     #$f6
00017B  1  85 3E                 sta     done
00017D  1  4C 8A 01              jmp     dislen
000180  1               
000180  1  A9 BF        diszer:  lda     #$bf		;store zero shape
000182  1  85 3D                 sta     dtwo
000184  1  A9 C0                 lda     #$c0
000186  1  85 3E                 sta     done
000188  1  85 3C                 sta     dthree
00018A  1  A2 00        dislen:  ldx     #$00
00018C  1  A5 39        rptb:    lda     temlen		;test for length
00018E  1  D5 44                 cmp     lnth,x
000190  1  F0 04                 beq     gtshp
000192  1  E8                    inx
000193  1  4C 8C 01              jmp     rptb
000196  1               
000196  1  B5 48        gtshp:   lda     lnshp,x	;store length shape
000198  1  85 3B                 sta     dfour
00019A  1  A9 80        dis:     lda     #$80		;load display
00019C  1  85 33                 sta     delayc		;length time
00019E  1  A9 7F                 lda     #$7f		;set direction reg
0001A0  1  8D 41 17              sta     sadd
0001A3  1  A2 04        rptc:    ldx     #$04		;up to 4 letters
0001A5  1  A0 FF        lite:    ldy     #$ff		;and display
0001A7  1  B5 53                 lda     letnum,x	;light letters
0001A9  1  8D 42 17              sta     sbd
0001AC  1  B5 3A                 lda     count,x
0001AE  1  8D 40 17              sta     sad
0001B1  1  88           wait:    dey				;delay
0001B2  1  D0 FD                 bne     wait
0001B4  1  CA                    dex				;get next letter
0001B5  1  10 EE                 bpl     lite
0001B7  1  A4 33                 ldy     delayc		;delay
0001B9  1  88                    dey
0001BA  1  84 33                 sty     delayc
0001BC  1  D0 E5                 bne     rptc
0001BE  1  20 40 1F              jsr     keyin		;test for next note
0001C1  1  20 6A 1F              jsr     getkey
0001C4  1  C9 03                 cmp     #$03
0001C6  1  F0 0C                 beq     next
0001C8  1  20 40 1F              jsr     keyin		;test for start again
0001CB  1  20 6A 1F              jsr     getkey
0001CE  1  C9 11                 cmp     #$11
0001D0  1  F0 0F                 beq     doagnb
0001D2  1  D0 C6                 bne     dis
0001D4  1               
0001D4  1  20 AC 02     next:    jsr     delay
0001D7  1  E6 37                 inc     dntcnt		;increment display note
0001D9  1  A2 FF                 ldx     #$ff		;count reset stack
0001DB  1  9A                    txs				;pointer
0001DC  1  EA                    nop				;padding
0001DD  1  EA                    nop
0001DE  1  4C 04 01              jmp     nxtnot
0001E1  1               
0001E1  1  A9 00        doagnb:  lda     #$00
0001E3  1  85 36                 sta     notcnt
0001E5  1  4C 00 02              jmp     nutune
0001E8  1               
0001E8  1               
0001E8  1               ;main program
0001E8  1                        .org    $0200
000200  1  A9 00        nutune:  lda     #$00		;initialize tune
000202  1  85 23                 sta     savflg
000204  1  85 2A                 sta     notnum
000206  1  85 2C                 sta     fstflg
000208  1  A9 01                 lda     #$01
00020A  1  85 60                 sta     tuntbl
00020C  1  85 A8                 sta     lnttbl
00020E  1  85 27                 sta     tnote
000210  1  A9 10                 lda     #$10
000212  1  85 24                 sta     tlenth
000214  1  A9 06        nunote:  lda     #$06		;initialize note
000216  1  85 25                 sta     notptr
000218  1  A9 0F                 lda     #$0f
00021A  1  85 26                 sta     keyptr
00021C  1  20 40 1F     playb:   jsr     keyin		;test keypad for note
00021F  1  20 6A 1F              jsr     getkey
000222  1  C5 26                 cmp     keyptr
000224  1  F0 2D                 beq     gtnote
000226  1  C9 00                 cmp     #$00		;for rest
000228  1  F0 20                 beq     gtrest
00022A  1  A5 2C                 lda     fstflg		;test for first time
00022C  1  C9 00                 cmp     #$00
00022E  1  F0 12                 beq     noplay
000230  1  C6 26                 dec     keyptr		;set up for next note
000232  1  C6 25                 dec     notptr
000234  1  10 02                 bpl     delya
000236  1  30 DC                 bmi     nunote
000238  1               
000238  1  A6 30        delya: 	 ldx     delaya
00023A  1  CA                    dex
00023B  1  86 30                 stx     delaya
00023D  1  D0 DD                 bne     playb
00023F  1  4C 65 02              jmp     svnote
000242  1               
000242  1  C6 26        noplay:  dec     keyptr		;set up for next note
000244  1  C6 25                 dec     notptr
000246  1  10 D4                 bpl     playb
000248  1  30 CA                 bmi     nunote
00024A  1               
00024A  1  A9 01        gtrest:  lda     #$01		;load rest
00024C  1  85 2C                 sta     fstflg
00024E  1  85 27                 sta     tnote
000250  1  4C 65 02              jmp     svnote
000253  1               
000253  1  A9 01        gtnote:  lda     #$01		;load forst note flag
000255  1  85 2C                 sta     fstflg
000257  1  A6 26                 ldx     keyptr		;load chosen note
000259  1  A9 00                 lda     #$00
00025B  1  85 28                 sta     hiflg
00025D  1  85 29                 sta     shpflg
00025F  1  B5 00                 lda     note,x
000261  1  85 27                 sta     tnote
000263  1  86 32                 stx     pntptr
000265  1  20 56 03     svnote:  jsr     gethi		;get hi note
000268  1  20 86 03              jsr     getsrp		;get sharp note
00026B  1  20 DA 03              jsr     gtlnth		;get length
00026E  1  20 00 03              jsr     platun		;play note
000271  1  20 40 1F              jsr     keyin		;test to save note
000274  1  20 6A 1F              jsr     getkey
000277  1  C9 03                 cmp     #$03
000279  1  F0 16                 beq     save
00027B  1  20 40 1F              jsr     keyin		;test for start over
00027E  1  20 6A 1F              jsr     getkey
000281  1  C9 11                 cmp     #$11		;DA = do again
000283  1  F0 13                 beq     doagn
000285  1  20 40 1F              jsr     keyin		;test for display note
000288  1  20 6A 1F              jsr     getkey
00028B  1  C9 12                 cmp     #$12		;=+
00028D  1  F0 15                 beq     dnotes
00028F  1  D0 8B                 bne     playb
000291  1               
000291  1  A9 01        save:    lda     #$01		;save note
000293  1  85 23                 sta     savflg
000295  1  4C 14 02              jmp     nunote
000298  1               
000298  1  A9 00        doagn:   lda     #$00		;reset note counter
00029A  1  85 36                 sta     notcnt
00029C  1  A2 FF                 ldx     #$ff		;reset stack pointer
00029E  1  9A                    txs
00029F  1  EA                    nop				;padding
0002A0  1  EA                    nop
0002A1  1  4C 00 02              jmp     nutune
0002A4  1               
0002A4  1  A2 FF        dnotes:  ldx     #$ff		;reset stack pointer
0002A6  1  9A                    txs
0002A7  1  EA                    nop
0002A8  1  EA                    nop
0002A9  1  4C 00 01              jmp     disnts		;jump to display notes
0002AC  1               
0002AC  1  A5 20        delay:	 lda 	 deltim		;get delay value
0002AE  1  85 21        		 sta 	 timed
0002B0  1  A9 FF        dela: 	 lda 	 #$ff		;load timer
0002B2  1  8D 04 17     		 sta 	 timer
0002B5  1  2C 07 17     test: 	 bit	 ttimer		;test timer
0002B8  1  10 FB         		 bpl	 test		;branch if not run out
0002BA  1  C6 22        		 dec 	 timec		;reduce time value
0002BC  1  D0 F2        		 bne	 dela		;start again
0002BE  1  C6 21        		 dec 	 timed		;reduce delay value
0002C0  1  D0 EE        		 bne	 dela		;branch if not done
0002C2  1  60           		 rts
0002C3  1               
0002C3  1               
0002C3  1               	;tone subroutine
0002C3  1               		 .org 	 $02dd
0002DD  1  A9 01        tone: 	 lda 	 #$01		;open port
0002DF  1  8D 01 17     		 sta	 padd
0002E2  1  A9 20        sound: 	 lda 	 #$20		;start timer
0002E4  1  8D 0F 17     		 sta	 stimer
0002E7  1  A6 2B        notex: 	 ldx 	 prmnot		;note freq
0002E9  1  CA           nwait:	 dex
0002EA  1  D0 FD        		 bne 	 nwait
0002EC  1  EE 00 17     		 inc	 pad		;toggle output
0002EF  1  A9 80        		 lda	 #$80		;test counter
0002F1  1  2C 07 17     		 bit 	 ttimer
0002F4  1  30 03        		 bmi 	 timout
0002F6  1  4C E7 02     		 jmp 	 notex
0002F9  1  C6 2D        timout:  dec 	 plenth		;note length
0002FB  1  D0 E5        		 bne 	 sound
0002FD  1  60           		 rts
0002FE  1               
0002FE  1               
0002FE  1               ;play tune subroutine
0002FE  1                        .org    $0300
000300  1  A5 2A        platun:  lda     notnum		;set up first note
000302  1  85 2E                 sta     tntnum
000304  1  A9 00                 lda     #$00
000306  1  85 2F                 sta     nexnot
000308  1  A5 27                 lda     tnote		;play note
00030A  1  85 2B                 sta     prmnot
00030C  1  A5 24                 lda     tlenth
00030E  1  85 2D                 sta     plenth
000310  1  20 DD 02              jsr     tone
000313  1  A5 23                 lda     savflg		;test for save
000315  1  C9 01                 cmp     #$01
000317  1  F0 1A                 beq     savex
000319  1  A5 2A                 lda     notnum		;test for note
00031B  1  C9 00                 cmp     #$00		;(not required)
00031D  1  F0 13                 beq     return
00031F  1  A6 2F        playc:   ldx     nexnot		;load next note
000321  1  B5 60                 lda     tuntbl,x
000323  1  85 2B                 sta     prmnot
000325  1  B5 A8                 lda     lnttbl,x	;load next length
000327  1  85 2D                 sta     plenth
000329  1  20 DD 02              jsr     tone		;play note
00032C  1  E6 2F                 inc     nexnot		;set up for
00032E  1  C6 2E                 dec     tntnum		;next note
000330  1  10 ED                 bpl     playc
000332  1  60           return:  rts
000333  1               
000333  1  A9 00        savex:   lda     #$00		;reset save flag
000335  1  85 23                 sta     savflg
000337  1  A9 00                 lda     #$00		;no play
000339  1  85 27                 sta     tnote
00033B  1  E6 2A                 inc     notnum		;load note into
00033D  1  A6 2A                 ldx     notnum		;tunetable
00033F  1  A5 2B                 lda     prmnot
000341  1  95 60                 sta     tuntbl,x
000343  1  A5 24                 lda     tlenth		;load length
000345  1  95 A8                 sta     lnttbl,x	;into length table
000347  1  20 AA 03              jsr     disply
00034A  1  4C 00 03              jmp     platun
00034D  1               
00034D  1               
00034D  1               ;get hi subroutine
00034D  1                        .org    $0356
000356  1  20 40 1F     gethi:   jsr     keyin		;test for hi note
000359  1  20 6A 1F              jsr     getkey
00035C  1  C9 07                 cmp     #$07
00035E  1  D0 15                 bne     retrnb
000360  1  A5 29                 lda     shpflg		;load shape flag
000362  1  C9 00                 cmp     #$00
000364  1  F0 09                 beq     loadhi
000366  1  A6 32                 ldx     pntptr		;load hi sharp note
000368  1  B5 15                 lda     hishrp,x
00036A  1  85 27                 sta     tnote
00036C  1  4C 75 03              jmp     retrnb		;could have been rts
00036F  1  A6 32        loadhi:  ldx     pntptr		;load hi note
000371  1  B5 07                 lda     hinote,x
000373  1  85 27                 sta     tnote
000375  1  60           retrnb:  rts
000376  1               
000376  1               ;get sharp subroutine
000376  1                        .org    $0386
000386  1  20 40 1F     getsrp:  jsr     keyin		;test for sharp note
000389  1  20 6A 1F              jsr     getkey
00038C  1  C9 05                 cmp     #$05
00038E  1  D0 0A                 bne     retrnc
000390  1  A9 01                 lda     #$01		;load sharp flag
000392  1  85 29                 sta     shpflg
000394  1  A6 32        		 ldx     pntptr		;load sharp note
000396  1  B5 0E                 lda     shpnot,x
000398  1  85 27                 sta     tnote
00039A  1  60           retrnc:  rts
00039B  1               
00039B  1               
00039B  1               ;display save subroutine
00039B  1                        .org    $03aa
0003AA  1  A9 80        disply:  lda     #$80		;load disply
0003AC  1  85 33                 sta     delayc		;ligth time
0003AE  1  A9 7F                 lda     #$7f		;set direction
0003B0  1  8D 41 17              sta     sadd
0003B3  1  A2 04        repeat:  ldx     #$04		;4 letters
0003B5  1  A0 FF        light:   ldy     #$ff		;and delay
0003B7  1  B5 53                 lda     letnum,x	;light letters
0003B9  1  8D 42 17              sta     sbd
0003BC  1  B5 58                 lda     letter,x
0003BE  1  8D 40 17              sta     sad
0003C1  1  88           waity:   dey				;delay
0003C2  1  D0 FD                 bne     waity
0003C4  1  CA                    dex				;get next letter
0003C5  1  10 EE                 bpl     light
0003C7  1  A4 33                 ldy     delayc		;delay
0003C9  1  88                    dey
0003CA  1  84 33                 sty     delayc
0003CC  1  D0 E5                 bne     repeat
0003CE  1  A5 36                 lda     notcnt		;test for 72 notes
0003D0  1  C9 48                 cmp     #$48		;48 hex is 72 dec
0003D2  1  D0 03                 bne     incnot
0003D4  1  4C 00 01              jmp     disnts
0003D7  1               
0003D7  1  E6 36        incnot:  inc     notcnt		;increase note count
0003D9  1  60                    rts
0003DA  1               
0003DA  1               ;get length subroutine
0003DA  1  A9 03        gtlnth:  lda     #$03		;load length pointer
0003DC  1  85 3F                 sta     lntptr
0003DE  1  20 40 1F     keytst:  jsr     keyin		;test keypad for
0003E1  1  20 6A 1F              jsr     getkey		;length
0003E4  1  A6 3F                 ldx     lntptr
0003E6  1  D5 40                 cmp     keylnt,x
0003E8  1  F0 05                 beq     lodlnt
0003EA  1  C6 3F                 dec     lntptr
0003EC  1  10 F0                 bpl     keytst
0003EE  1  60                    rts
0003EF  1  B5 44        lodlnt:  lda     lnth,x		;load length
0003F1  1  85 24                 sta     tlenth
0003F3  1  60                    rts
0003F4  1               
0003F4  1               
0003F4  1               
